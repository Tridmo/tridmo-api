version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: tridmo_db_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - tridmo-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Tridmo API Application (Development)
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    env_file:
      - .env.local
    environment:
      EMAIL_USERNAME: ${EMAIL_USERNAME:-}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD:-}
      EMAIL_HOSTNAME: ${EMAIL_HOSTNAME:-}
      EMAIL_FROM: ${EMAIL_FROM:-}
      ADMIN_USERNAME: ${ADMIN_USERNAME:-}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-}
      TIMBER_ADMIN_USERNAME: ${TIMBER_ADMIN_USERNAME:-}
      TIMBER_ADMIN_PASSWORD: ${TIMBER_ADMIN_PASSWORD:-}
      TIMBER_ADMIN_EMAIL: ${TIMBER_ADMIN_EMAIL:-}
      CHAT_API_URL: ${CHAT_API_URL:-}
      CHAT_API_KEY: ${CHAT_API_KEY:-}
      CHAT_EXPIRES_IN: ${CHAT_EXPIRES_IN:-}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET:-}
      ACCESS_TOKEN_EXPIRES_IN: ${ACCESS_TOKEN_EXPIRES_IN:-}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET:-}
      REFRESH_TOKEN_EXPIRES_IN: ${REFRESH_TOKEN_EXPIRES_IN:-}
      PORT: ${PORT:-3000}
      NODE_ENV: ${NODE_ENV:-dev}
      LOG_LEVEL: ${LOG_LEVEL:-dev}
      PG_PORT: ${PG_PORT:-5432}
      DB_URL: ${DB_URL:-}
      PG_HOST: ${PG_HOST:-localhost}
      PG_USER: ${PG_USER:-postgres}
      PG_PASSWORD: ${PG_PASSWORD:-}
      PG_DB_NAME: ${PG_DB_NAME:-postgres}
      S3_ACCOUNT_ID: ${S3_ACCOUNT_ID:-}
      S3_ACCESS_ID: ${S3_ACCESS_ID:-}
      S3_SECRET_KEY: ${S3_SECRET_KEY:-}
      S3_IMAGES_BUCKET_NAME: ${S3_IMAGES_BUCKET_NAME:-images}
      S3_FILES_BUCKET_NAME: ${S3_FILES_BUCKET_NAME:-files}
      BASE_IMG_URL: ${BASE_IMG_URL:-}
      BASE_FILES_URL: ${BASE_FILES_URL:-}
      PRODUCT_ID: ${PRODUCT_ID:-}
      SUPABASE_PROJECT_PASSWORD: ${SUPABASE_PROJECT_PASSWORD:-}
      SUPABASE_APP_URL: ${SUPABASE_APP_URL:-}
      SUPABASE_ANON: ${SUPABASE_ANON:-}
      SUPABASE_SERVICE_ROLE: ${SUPABASE_SERVICE_ROLE:-}
      CHAT_WEBHOOK_PAYLOAD_URL: ${CHAT_WEBHOOK_PAYLOAD_URL:-}
      CHAT_WEBHOOK_SECRET: ${CHAT_WEBHOOK_SECRET:-}
      TIMBER_TELEGRAM_BOT_TOKEN: ${TIMBER_TELEGRAM_BOT_TOKEN:-}
      TIMBER_TELEGRAM_ORDERS_CHAT_ID: ${TIMBER_TELEGRAM_ORDERS_CHAT_ID:-}
      TIMBER_SITE_URL: ${TIMBER_SITE_URL:-}
      TELEGRAM_API_URL: ${TELEGRAM_API_URL:-}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:3030}
      DD_API_KEY: ${DD_API_KEY:-}
      DD_SITE: ${DD_SITE:-ap1.datadoghq.com}
      DD_ENV: ${DD_ENV:-dev}
      DD_HOSTNAME: ${DD_HOSTNAME:-tridmo-api-server}
      DD_SOURCE: ${DD_SOURCE:-nodejs}
      DD_SERVICE: ${DD_SERVICE:-tridmo-api}
      DD_TAGS: ${DD_TAGS:-team:backend,component:api}
    ports:
      - "4000:4000"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - tridmo-dev-network
    depends_on:
      db:
        condition: service_healthy
    command: ["npm", "run", "dev"]

networks:
  tridmo-dev-network:
    driver: bridge

volumes:
  postgres_dev_data: